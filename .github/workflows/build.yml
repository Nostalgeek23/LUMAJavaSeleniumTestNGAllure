name: Build Java with Maven

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write
  actions: read
  checks: write

jobs:
  build:
    name: Build On

    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]


    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Clone code from repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Cache m2 dependencies
        uses: actions/cache@v4
        with:
          path: .m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-    

#            UBUNTU JOBS

      - name: Build with Maven - Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run:  mvn clean -e install -Dmaven.test.skip=true

      - name: Test with Maven - Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mvn test -PSmokeTest
          mvn test -PRegressTest          
          mvn test -PUbuntuTest

#             WINDOWS JOBS

      - name: Build with Maven - Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run:  |
          mvn clean -e install '-Dmaven.test.skip=true'
          choco install microsoft-edge
          choco install selenium-edge-driver

      - name: Test with Maven - Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          mvn test -PSmokeTest
          mvn test -PRegressTest         
          mvn test -PWindowsTest

#             MACOS JOBS

      - name: Build with Maven - MacOs
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          mvn clean -e install -Dmaven.test.skip=true
          brew install selenium-server-standalone
          selenium-server -port 4444;
          defaults write com.apple.Safari IncludeDevelopMenu YES
          defaults write com.apple.Safari AllowRemoteAutomation 1
          sudo safaridriver --enable
          safaridriver -p 0 &          

      - name: Test with Maven - MacOs
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          mvn test -PSmokeTest
          mvn test -PRegressTest           
          mvn test -PMacosTest

#          Dorny Test Reporter

      - name: Dorny Test Reporter
        uses: dorny/test-reporter@v1.9.1
        if: success() || failure()
        with:
          name: Test Report for ${{ matrix.os }}
          path: target/surefire-reports/TEST-*.xml
          reporter: java-junit

#          ALLURE

      - name: Upload Allure Report
        uses: actions/upload-artifact@v2
        with:
          name: allure-report-${{ matrix.os }}
          path: target/allure-results

  merge-reports:
    name: Merge Allure Reports and Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure Reports (Ubuntu)
        uses: actions/download-artifact@v2
        with:
          name: allure-report-ubuntu-latest
          path: reports/ubuntu

      - name: Download Allure Reports (Windows)
        uses: actions/download-artifact@v2
        with:
          name: allure-report-windows-latest
          path: reports/windows

      - name: Download Allure Reports (macOS)
        uses: actions/download-artifact@v2
        with:
          name: allure-report-macos-13
          path: reports/macos

      - name: Merge Allure Reports
        run: |
          allure generate reports/ubuntu reports/windows reports/macos --clean -o reports/merged

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: reports/merged

#          CODE-STYLE

  check-java-code-style:
    name: Check Java code style

    runs-on: ubuntu-latest

    steps:
      - name: Clone code from repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run java checkstyle
        uses: nikitasavinov/checkstyle-action@0.6.0
